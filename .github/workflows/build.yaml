name: Build
on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
jobs:
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm ci
      - name: Run unit tests
        run: npm run test:unit
      - name: Build artifact
        run: npm run build --if-present
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: travelgpt-client
          path: ./client/dist
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Run unit tests
      run: dotnet test
    - name: Build artifact
      run: dotnet publish src/main --artifacts-path build
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: travelgpt-server
        path: ./server/build/publish/main/release
  integration:
    needs: [frontend, backend]
    environment: Integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm i -g wait-on
      - name: Download server artifact
        uses: actions/download-artifact@v4
        with:
          name: travelgpt-server
          path: server
      - name: Run server artifact
        run: dotnet server/travelgpt-server.dll & wait-on $VITE_API_SERVER_URL
        env:
          VITE_API_SERVER_URL: http://localhost:5000
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      - run: npm ci --prefix client
      - name: Run tests
        run: npm run test:integration --prefix client
